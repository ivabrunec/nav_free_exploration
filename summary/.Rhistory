install.packages('IRkernel')  # Donâ€™t forget step 2/3!
IRkernel::installspec()
library(ggplot2)
.libPaths( c( .libPaths(), "~/C:/Program Files/R/R-4.2.1") )
library(IRkernal)
library(IRkernel)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(effectsize) # partial eta squares
library(ggplot2) # plotting
source('R_rainclouds.R') # customizable raincloud plotting
# to implement raincloud plots: https://github.com/RainCloudPlots/RainCloudPlots
library(tidyverse) # ggsave
library(cowplot) # layout
library(boot) # bootstrapping
library(lm.beta) # standardized beta coefficients
## read in summarised data files
data_exp1 <- read.table('summary_data_exp1.csv', header=T, sep=',')
data_exp2 <- read.table('summary_data_exp2.csv', header=T, sep=',')
error_data_nav <- data_exp1[c('sub','abs_error','integ_experienced')]
integ_data_nav <- data_exp1[c('integ_experienced')]
colnames(integ_data_nav) <- 'integ'
integ_data_nav$categ <- 'real_nav'
# save just numerical values
integ_data_vals <- as.data.frame(data_exp1$integ_experienced)
## split into tertiles based on pointing error
integ_data_tertiles <-  error_data_nav %>%
mutate(tertile = ntile(abs_error, 3))
integ_data_tertile1 <- filter(integ_data_tertiles, tertile == 1)
integ_data_t1 <- integ_data_tertile1$integ_experienced
integ_data_tertile2 <- filter(integ_data_tertiles, tertile == 2)
integ_data_t2 <- integ_data_tertile2$integ_experienced
integ_data_tertile3 <- filter(integ_data_tertiles, tertile == 3)
integ_data_t3 <- integ_data_tertile3$integ_experienced
### Experiment 1: simulated data ###
## random walk
integ_data_sim <- read.table('trajectory_simulation/exp1_simulated_agent_integration_values.csv', header=T, sep=',')
## FULL random walk
integ_data_sim <- read.table('trajectory_simulation/exp1_simulated_agent_integration_values_FullRandom.csv', header=T, sep=',')
colnames(integ_data_sim) <- 'integ'
integ_data_sim$categ <- "random_walk_full"
### Experiment 1: simulated data ###
## random walk
integ_data_sim <- read.table('trajectory_simulation/exp1_simulated_agent_integration_values.csv', header=T, sep=',')
colnames(integ_data_sim) <- 'integ'
integ_data_sim$categ <- "random_walk"
# save just numerical values
integ_data_sim_vals <- as.data.frame(integ_data_sim$integ)
## FULL random walk
integ_data_sim_fr <- read.table('trajectory_simulation/exp1_simulated_agent_integration_values_FullRandom.csv', header=T, sep=',')
colnames(integ_data_sim_fr) <- 'integ'
integ_data_sim_fr$categ <- "random_walk_full"
# save just numerical values
integ_data_sim_fr_vals <- as.data.frame(integ_data_sim_fr$integ)
## proportionally weighted options
integ_data_sim_w <- read.table('trajectory_simulation/exp1_simulated_agent_integration_values_weighted.csv', header=T, sep=',')
colnames(integ_data_sim_w) <- 'integ'
integ_data_sim_w$categ <- "prop_weighted"
# save just numerical values
integ_data_sim_w_vals <- as.data.frame(integ_data_sim_w$integ)
## heavily weighted options
integ_data_sim_h <- read.table('trajectory_simulation/exp1_simulated_agent_integration_values_weighted_5x.csv', header=T, sep=',')
colnames(integ_data_sim_h) <- 'integ'
integ_data_sim_h$categ <- "heavily_weighted"
# save just numerical values
integ_data_sim_h_vals <- as.data.frame(integ_data_sim_h$integ)
integ_data_df_t1 <- as.data.frame(integ_data_t1)
colnames(integ_data_df_t1) <- c("integ")
integ_data_df_t1$categ <- "nav_tertile1"
integ_data_df_t2 <- as.data.frame(integ_data_t2)
colnames(integ_data_df_t2) <- c("integ")
integ_data_df_t2$categ <- "nav_tertile2"
integ_data_df_t3 <- as.data.frame(integ_data_t3)
colnames(integ_data_df_t3) <- c("integ")
integ_data_df_t3$categ <- "nav_tertile3"
integ_data_combin <- rbind(integ_data_df_t1, integ_data_df_t2, integ_data_df_t3, integ_data_sim, integ_data_sim_fr, integ_data_sim_w, integ_data_sim_h)
integ_data_combin$categ <- factor(integ_data_combin$categ, levels = c("nav_tertile3", "nav_tertile2", "nav_tertile1", "random_walk", "random_walk_full", "prop_weighted", "heavily_weighted"))
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom tertile','Middle tertile','Top tertile','Random walk','Weighted connectivity bias','Strong connectivity bias')) +
scale_fill_manual(values = c("#FFA411", "#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
install.packages('plyr')
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom tertile','Middle tertile','Top tertile','Random walk','Weighted connectivity bias','Strong connectivity bias')) +
scale_fill_manual(values = c("#FFA411", "#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom tertile','Middle tertile','Top tertile','Random walk', 'Full random walk','Weighted connectivity bias','Strong connectivity bias')) +
scale_fill_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom \n tertile','Middle tertile','Top tertile','Random walk', 'Full random walk','Weighted connectivity bias','Strong connectivity bias')) +
scale_fill_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom \n tertile','Middle \n tertile','Top \n tertile','Random walk', 'Full random \n walk','Weighted \n connectivity bias','Strong \n connectivity bias')) +
scale_fill_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom \n tertile','Middle \n tertile','Top \n tertile','Random \n walk', 'Full random \n walk','Weighted \n connectivity bias','Strong \n connectivity bias')) +
scale_fill_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## integration: plot
ggplot(integ_data_combin, aes(x = categ, y = integ, fill = categ)) +
geom_flat_violin(position = position_nudge(x = .25, y = 0), adjust = 1, trim = FALSE, alpha = .75, color = 'white') +
geom_point(aes(color = categ, fill=categ), position = position_jitter(width = .15, height = 0), size = 2.5, alpha = 1, shape = 20) +
geom_boxplot(aes(x = as.numeric(as.factor(categ)) + 0.25, y = integ), outlier.shape = NA, alpha = 0.85, width = .1, colour = "black") +
ylab('Average integration') + xlab('') +
guides(fill = FALSE, colour = FALSE) +
scale_x_discrete(labels = c('Bottom \n tertile','Middle \n tertile','Top \n tertile','Random \n walk', 'Full random \n walk','Weighted \n conn. bias','Strong \n conn. bias')) +
scale_fill_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
scale_color_manual(values = c("#FFA411", "#E7570F", "#9B2226", "#CD3F7F", "#CD3F7F", "#913B87", "#5A1D97")) +
theme_minimal(base_size = 18) +
theme(axis.text.x = element_text(colour="black", size = 12), axis.text.y = element_text(colour = "black")) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggsave("exp1_data_sim_raincloud_fullrandom.png", width = 12.5, height = 5)
